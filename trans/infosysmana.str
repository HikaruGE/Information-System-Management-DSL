module infosysmana

imports
  
  completion/completion
  pp
  outline
  analysis
  signatures/-
  gernerate/-

rules // Debugging
  
  debug-show-aterm:
    (node, _, _, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"aterm")> path
    ; result   := node

rules

	generate-entity-code:
	(selected, position, ast, path, project-path) -> (filenameLst, resultLst)
	with
		entityLst := <collect-all(find-entity)>selected;
		entityTuple@(entityFilenameLst,entityResultLst) := <generate-entity-file>entityLst;
		serdaoTuple@(sdFilenameLst,sdResultLst) := <generate-ser-dao-code>selected;
		filenameLst := <conc>(entityFilenameLst,sdFilenameLst);
		resultLst := <conc>(entityResultLst,sdResultLst)
	
	generate-controller-code:
	(selected, position, ast, path, project-path) -> (controllerFilenameLst, controllerResultLst)
	with
		dispatcherLst := <collect-all(find-dispatcher)>selected;
		controllerTuple@(controllerFilenameLst, controllerResultLst) := <generate-controller-file>dispatcherLst
	
	generate-html-code:
	(selected, position, ast, path, project-path) -> (pageFilenameLst, pageResultLst)
	with
		dispatcherLst := <collect-all(find-dispatcher)>selected;
		pageTuple@(pageFilenameLst,pageResultLst) := <generate-html-file>dispatcherLst
	
	generate-ser-dao-code:
	selected -> (sdFilenameLst, sdResultLst)
	with
		entityLst := <collect-all(?Entity(_,_))>selected;
		entityTuple@(sdFilenameLst,sdResultLst) := <generate-ser-dao>entityLst
		
	generate-main-code:
	(selected, position, ast, path, project-path) -> (filename, result)
	with
		init := <fetch-elem(?Init(_))><collect-all(?Init(_))>selected;
		filename := "spring-boot/src/Application.java";
		result := <generate-init-file>init
	
	generate-common-template-code:
	(selected, position, ast, path, project-path) -> (filenameLst, resultLst)
	with
		templateLst := <collect-all(?Template(_,_,_))>selected;
		(filenameLst, resultLst) := <generate-common-template-file>templateLst
	
	get-module-lst:
		Modules(x) -> x
		
	find-entity =
		?Entity(_,_)
	
	find-dispatcher =
		?Dispatcher(_,_)
	
	derive-entity-dsl:
	(selected, position, ast, path, project-path) -> (filename, <concat-strings>result)
	with
		tarPath := <concat-strings>[<dirname>path,"/","derivation"];
		filename := <guarantee-extension(|"ism")>tarPath;
		entityLst := <collect-all(?Entity(_,_))>selected;
		crudEntityLst := <collect-all(?Derive(_))>selected;
		result := <map(generate-dispather-file(|entityLst))>crudEntityLst
	
	
	